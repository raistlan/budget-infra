services:
  reverse-proxy:
    image: traefik:v2.11
    container_name: traefik
    command:
      - --api.insecure=true # this should be set to false in production
      - --providers.docker=true
      - --log.level=debug
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.dashboard.address=:${TRAEFIK_DASHBOARD_PORT}
    ports:
      - 80:80
      - 443:443
      - ${TRAEFIK_DASHBOARD_PORT}:8080 # Traefik dashboard -- this shouldn't be exposed in production
    volumes:
      # this makes it so that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: postgres
    restart: always
    depends_on:
      - reverse-proxy
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PG_ADMIN_PORT}:80"
    depends_on:
      - db
    networks:
      - backend

  # api-node:
  #   build: ./services/node-api
  #   container_name: api-node
  #   labels:
  #     - "traefik.http.routers.node.rule=PathPrefix(`/node`)"
  #     - "traefik.http.services.node.loadbalancer.server.port=${NODE_PORT}"
  #   networks:
  #     - backend

  # api-python:
  #   build: ./services/python-api
  #   container_name: api-python
  #   labels:
  #     - "traefik.http.routers.python.rule=PathPrefix(`/python`)"
  #     - "traefik.http.services.python.loadbalancer.server.port=${PYTHON_PORT}"
  #   networks:
  #     - backend

  # api-go:
  #   build: ./services/go-api
  #   container_name: api-go
  #   labels:
  #     - "traefik.http.routers.go.rule=PathPrefix(`/go`)"
  #     - "traefik.http.services.go.loadbalancer.server.port=${GO_PORT}"
  #   networks:
  #     - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
